{"version":3,"sources":["components/Home.js","components/Countries.js","serviceWorker.js","components/CountryDetails.js","components/Languagies.js","components/Language.js","components/Regions.js","components/Region.js","components/Population.js","reducers/sigInOutReducer.js","reducers/changeStatReducer.js","store.js","actions/LoadStatAction.js","components/SignUpForm.js","components/SignUp.js","actions/signInAction.js","components/SignInForm.js","components/SignIn.js","actions/changeStatAction.js","components/MyTravelsForm.js","components/AddNewTravels.js","actions/signOutAction.js","components/NavBar.js","components/NavBarContainer.js","components/Statistics.js","components/StatisticsContainer.js","components/MyProfile.js","actions/deleteAction.js","components/ProfileContainer.js","components/ChangeName.js","actions/changeNameAction.js","components/ChangeNameContainer.js","index.js"],"names":["Home","className","to","React","Component","Countries","Processing","e","setState","searching","target","value","toLowerCase","state","countries","fetch","then","res","json","count","type","placeholder","onChange","this","searchfor","List","Filtring","a","filter","item","includes","props","listofcountries","map","country","ind","key","String","Boolean","window","location","hostname","match","Country","name","area","region","population","neighbours","capital","currency","flag","address","params","style","backgroundImage","Languagies","languagies","lang","Language","Regions","regions","reg","Region","Population","initialState","in","signInOutReducer","action","result","username","newname","usercountry","changeStatReducer","newstatistics","forEach","info","push","viscountries","statistics","newstat","newstatis","oldname","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","form","reduxFormReducer","store","createStore","applyMiddleware","thunk","dispatch","console","log","axios","get","response","data","renderField","input","label","meta","touched","error","warning","SignUpForm","finished","Clear","bind","handleSubmit","pristine","reset","submitting","onSubmit","Field","component","disabled","onClick","reduxForm","validate","values","errors","length","password","confirmpassword","SignUp","usererror","SignUpRequest","userData","existingusers","post","SIGN_IN","signin","SubmissionError","_error","user","SignInForm","SignIn","connect","CHANGE_STAT","SendingStatistics","getState","Object","keys","usernm","changeStatAction","MyTravelsForm","id","MyTravels","SIGN_OUT","SignOutAction","NavBar","SignOut","NavBarContainer","comparePop","b","visits","Statistics","list","one","topcountries","stat","find","fromwhere","sort","yourtopcountries","toplist","slice","StatisticsContainer","Deletting","delete","Profile","allstat","viscountr","ProfileContainer","Changing","oldnm","newnm","put","ChangeName","ChangeNameContainer","ReactDOM","render","margin","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97bfcce8.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/App.css';\nimport {NavLink } from 'react-router-dom'\n\nclass Home extends React.Component {\n  render () {\n  return (\n    <div className = 'col-9'>\n        <h1>Welcome to Travellers</h1>\n        <p className='countries'> Here you can find some geografical data and information about different countries. \n            For example, you can find boardes of counrty, it's currency, languages, capital and a lot of more.</p>\n        <p>If you want to find more about statisitcs of travels all over the wrold, please, come to <NavLink to={'/signup'} >Sign Up</NavLink>.</p>\n    </div>\n  );}\n}\n\nexport default Home;\n\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport {NavLink } from 'react-router-dom'\n\n\nclass Countries extends React.Component {\n  constructor() {\n    super ()\n    this.state = {countries: [], \n      searching: \"\"}\n   }\n\n    Processing= e => {\n       this.setState({searching: e.target.value.toLowerCase()})};\n\n  \n    componentDidMount() {\n      fetch(`/catalog/countries`)\n        .then (res => res.json())\n        .then((count) =>this.setState({countries: count}))\n   }\n    render () {\n    return (\n      <div className = 'col-9 countries'>\n        <h1>\n          There is the list of all countries\n        </h1>\n        <input type=\"text\" placeholder=\"search\" onChange={this.Processing}/>\n        <List searchfor={this.state.searching} countries = {this.state.countries}/>\n       </div>\n    );}\n  }\n  \nclass List extends React.Component {\n\n    Filtring = a => a.filter(item => item.toLowerCase().includes(this.props.searchfor));\n    \n    render () {\n      let listofcountries=this.Filtring(this.props.countries)\n          return( \n     <div>\n        {listofcountries.map((country, ind) => \n         <p key={ind}>{ind+1} \n         <NavLink to={String('/countries/'+ country)}> {country}</NavLink>\n         </p>)}\n      </div>\n    )}}\n\n    export default Countries;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Country extends React.Component {\n   state = {\n            name: null,\n            area: null,\n            region: null,\n            population: null,\n            neighbours: null,\n            capital: null,\n            currency: null, \n            flag:null}\n  \n    componentDidMount() {\n      let address=`/catalog/countries/`+this.props.match.params.name\n      fetch(address)\n        .then (res => res.json())\n        .then((country) => {\n            this.setState((state) => {\n                return {name: country.name, area: country.area, region: country.region, \n                        population: country.population, neighbours: country.neighbours, \n                        capital: country.capital, currency: country.currency, flag: country.flag}\n            })\n        });\n   }\n\n    render () {\n    return (\n    <div className = 'col-9'>\n     <h1>{this.state.name}</h1>\n     <div className='row'>\n     <div className='col-5'>\n     <p>Area: {this.state.area}</p>\n     <p>Region: <NavLink to={String('/regions/'+ this.state.region)}> {this.state.region}</NavLink></p>\n     <p>Population: {this.state.population}</p>\n     <p>Capital: {this.state.capital}</p>\n     <p>Currency: {this.state.currency}</p>\n     </div>\n     <div className=' col-7 flag' style={{backgroundImage: 'url(' + this.state.flag + ')'}}></div>\n   </div>\n     </div>\n     );}\n  }\n  \n  export default Country;\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport {NavLink } from 'react-router-dom'\n\n\nclass Languagies extends React.Component {\n    state = {languagies: []}\n  \n    componentDidMount() {\n      fetch(`/catalog/languagies`)\n        .then (res => res.json())\n        .then((lang) => {\n            this.setState({languagies: lang})})\n   }\n    render () {\n    return (\n      <div className = 'col-9 countries'>\n        <h1>\n          There is the list of all languagies\n        </h1>\n        {this.state.languagies.map((lang, ind) =>\n            <p key={ind}>{ind+1} \n            <NavLink to={String('/languagies/'+ lang)}> {lang}</NavLink>\n            </p>\n          )}\n      </div>\n    );}\n  }\n  \n  export default Languagies;\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Language extends React.Component {\n   state = {countries: []}\n  \n    componentDidMount() {\n      let address=`/catalog/languagies/`+this.props.match.params.name\n      fetch(address)\n        .then (res => res.json())\n        .then((count) => {\n            this.setState((state) => {\n                return {countries: count}\n            })\n        });\n   }\n\n    render () {\n    return (\n    <div className = 'col-9 countries'>\n     <h1>There are all countries where people speek {this.props.match.params.name}</h1>\n     {this.state.countries.map((country, ind) =>\n            <p key={ind}>{ind+1} \n            <NavLink to={String('/countries/'+ country)}> {country}</NavLink>\n            </p>\n          )}\n     </div>\n     );}\n  }\n  \n  export default Language;\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport {NavLink } from 'react-router-dom'\n\nclass Regions extends React.Component {\n    state = {regions: []}\n  \n    componentDidMount() {\n      fetch(`/catalog/regions`)\n        .then (res => res.json())\n        .then((reg) => {\n            this.setState({regions: reg})})\n   }\n    render () {\n    return (\n      <div className = 'col-9 countries'>\n        <h1>\n          There is the list of all regions\n        </h1>\n        {this.state.regions.map((reg, ind) =>\n            <p key={ind}>{ind+1} \n            <NavLink to={String('/regions/'+ reg)}> {reg}</NavLink>\n            </p>\n          )}\n      </div>\n    );}\n  }\n  \n  export default Regions;\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Region extends React.Component {\n   state = {countries: []}\n  \n    componentDidMount() {\n      let address=`/catalog/regions/`+this.props.match.params.name\n      fetch(address)\n        .then (res => res.json())\n        .then((count) => {\n            this.setState((state) => {\n                return {countries: count}\n            })\n        });\n   }\n\n    render () {\n    return (\n    <div className = 'col-9 countries'>\n     <h1>There are all countries in {this.props.match.params.name}</h1>\n     {this.state.countries.map((country, ind) =>\n            <p key={ind}>{ind+1} \n            <NavLink to={String('/countries/'+ country)}> {country}</NavLink>\n            </p>\n          )}\n     </div>\n     );}\n  }\n  \n  export default Region;\n","import React from 'react';\nimport '../css/App.css';\nimport '../css/Countries.css'\nimport {NavLink } from 'react-router-dom'\n\n\nclass Population extends React.Component {\n    state = {countries: []}\n\n    componentDidMount() {\n      fetch('/catalog/sort')\n        .then (res => res.json())\n        .then((count) => { \n            this.setState({countries: count})})\n   }\n    render () {\n    return (\n      <div className = 'col-9 countries'>\n        <h1>\n        There is the rank of countries in descending order of population.\n        </h1>\n        {this.state.countries.map((count, ind) =>\n            <p key={ind}>{ind+1} \n            <NavLink to={String('/countries/'+ count.country)}> {count.country} </NavLink>\n             {count.population}\n            </p>\n          )}\n      </div>\n    );}\n  }\n  \n  export default Population;","const initialState= {\n    in: 0\n}\nfunction signInOutReducer (state=initialState, action) {\n    switch (action.type) {\n        case 'SIGN_IN': \n        return  {\n            in:  action.result,\n            username: action.username,\n            country: action.count\n        }\n        case 'SIGN_OUT': {\n            return {\n                in: action.result\n            }\n        }\n\n        case 'CHANGE_NAME':\n            return {\n                in:1,\n                username: action.newname,\n                country: action.usercountry\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default signInOutReducer","\nconst initialState= []\n\nfunction changeStatReducer (state=initialState, action) {\n    switch (action.type) {\n        case 'CHANGE_STAT':\n                const newstatistics=[]\n                let flag=0\n                state.forEach(info => { if (info.username !== action.username) {\n                        newstatistics.push (info)}\n                    else {\n                        flag=1\n                        newstatistics.push({username: action.username, usercountry: action.usercountry, viscountries: action.viscountries})\n                    }})\n            if (!flag) {\n                newstatistics.push({username: action.username, usercountry: action.usercountry, viscountries: action.viscountries})\n            }\n\n        return  newstatistics\n\n        case 'STATISTICS_HAS_LOADED': \n            return action.statistics\n\n        case 'DELETE':\n        const newstat=[]\n            state.forEach(info => {if (info.username !== action.username) {\n                    newstat.push (info)}})\n        return newstat\n\n        case 'CHANGE_NAME': \n         const newstatis=[]\n         state.forEach(info => {if (info.username === action.oldname) {\n             newstatis.push ({username: action.newname, usercountry: info.usercountry, viscountries: info.viscountries})\n        }\n        else { newstatis.push (info)}}\n        )\n        return newstatis\n\n        default:\n            return state\n    }\n}\n\nexport default changeStatReducer","import { createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport { reducer as reduxFormReducer }  from 'redux-form' \nimport thunk from 'redux-thunk'\nimport signInOutReducer from './reducers/sigInOutReducer'\nimport changeStatReducer from './reducers/changeStatReducer';\nimport {FetchingStat} from './actions/LoadStatAction'\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers ({\n    form: reduxFormReducer,\n    in: signInOutReducer,\n    statistics: changeStatReducer\n});\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\nwindow.store=store;\nstore.dispatch(FetchingStat())\nexport default store;\n","import axios from 'axios'\n\nfunction StatHasLoaded (statistics) {\n    return  {\n        type: 'STATISTICS_HAS_LOADED',\n        statistics\n    }; \n}\n\nexport function FetchingStat() {\n    console.log('in fetching')\n    return (dispatch) => {\n        console.log('inside')\n        axios.get('/catalog/statistics/')\n            .then((response) => {console.log(response);dispatch(StatHasLoaded(response.data))})\n    };\n}\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport '../css/Button.css';\n\nconst validate = values => {\n    const errors = {}\n    if (!values.username) {\n      errors.username = 'Required'\n    } else if (values.username.length < 5) {\n      errors.username = 'Must be 5 characters or more'\n    }\n\n    if (!values.password) {\n      errors.password = 'Required'\n    }\n    if (!values.confirmpassword) {\n        errors.confirmpassword = 'Required'\n    }\n    else if (values.password!==values.confirmpassword) {\n      errors.password = 'Passwords must match'\n    }  return errors \n}\n\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\nclass SignUpForm extends React.Component{\n        constructor (props) {\n          super (props)\n          this.state = {\n            finished: false, \n            countries: []\n          }\n          this.Clear=this.Clear.bind(this);\n        }\n\n        Clear () {\n          this.setState ({finished: true})\n        }\n\n        componentDidMount() {\n            fetch ('catalog/countries')\n            .then (res => res.json())\n            .then((count) =>this.setState({countries: count}))}\n\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        return (\n           <form onSubmit={handleSubmit} className = 'col-9'>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'password' component={renderField} label = 'Password'/>\n               <Field name ='confirmpassword' type = 'password' component={renderField} label = 'Confirm password'/>\n               \n               <div>\n               <label>Where do you live?   </label>\n               <Field name=\"country\" component=\"select\" className=\"form-control\">\n               {this.state.countries.map((country, ind) =>\n                <option key={ind} value = {country}>{country}</option>)}\n               </Field>\n               </div>\n\n                 <button className=\"btn btn-outline-primary signinbut\" type = 'submit' disabled={submitting}>Sign Up</button> \n                 <button className=\"btn btn-outline-primary clear signinbut\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n              \n           </form>\n        )}}\n\nexport default reduxForm ({\n  form: 'SignUpForm',\n  validate\n})(SignUpForm)\n\n","import React from 'react';\nimport SignUpForm from \"./SignUpForm\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router'\n\n\nclass SignUp extends React.Component  {\n    constructor (props) {\n        super (props)\n        this.state = {\n          finished: false, \n          usererror:false,\n          countries: []\n        }\n        this.SignUpRequest=this.SignUpRequest.bind(this);\n      }\n\n    SignUpRequest(userData) {\n        const existingusers=[]\n  \n        axios.get ('/catalog/users')\n            .then (res => {res.data.forEach(name => {\n                 existingusers.push(name)})\n            if (existingusers.includes(userData.username)) {\n                    this.setState ({usererror: true})\n            }\n            else {\n        this.setState ({finished:true})\n        this.setState ({usererror: false})\n        return axios.post ('catalog/signup', {'username': userData.username, 'password' : userData.password, 'country':userData.country})\n    }})}\n\n    render () {\n    if (this.state.usererror){\n        return (<div>\n            <SignUpForm onSubmit={this.SignUpRequest} /><p>This nickname is reserved, try another one</p></div>)\n    }\n    else{\n    if (this.state.finished) {\n        return (<Redirect to='/signin' />)\n    } else {\n    return (\n    <SignUpForm onSubmit={this.SignUpRequest} />)}}\n}}\n\nexport default SignUp;","const SIGN_IN='SIGN_IN';\nexport default function SignInAction (user, usercountry){\n    console.log(usercountry)\n    console.log(100)\n    return {\n        type: SIGN_IN, \n        result: 1, \n        username: user.name,\n        count: user.country}\n}","import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport { SubmissionError } from 'redux-form';\nimport axios from 'axios'\nimport signInAction from '../actions/signInAction';\nimport store from '../store';\nimport '../css/Button.css';\nimport { Redirect } from 'react-router';\n\nfunction signin (values) {\n    return axios.get ('catalog/reqsignin', {params: {username: values.username, password : values.password}})\n    .then (res => {  \n        if (res.data) {\n        store.dispatch(signInAction({'name': values.username, 'country': res.data}))\n    }\n     else \n    { throw new SubmissionError({\n        password: 'Wrong username or password',\n        username: 'Wrong username or password',\n        _error: 'Wrong username or password!'}\n        );}\n}\n)}\nconst renderField = ({input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\nclass SignInForm extends React.Component{\n        constructor (props) {\n          super (props) \n          this.state = {\n            finished: null\n          }\n          this.Clear=this.Clear.bind(this);\n        }\n\n          Clear () {\n            this.setState ({finished: true})\n          }\n        render () {\n        const { handleSubmit, pristine, reset, submitting } = this.props\n        if (this.props.in) {\n          return (<Redirect to= '/mytravels'/>)\n        } else {\n        return (\n           <form onSubmit={handleSubmit(signin)} className= 'col-9'>\n               <Field name ='username' type = 'text' component={renderField} label = 'Username'/>\n               <Field name ='password' type = 'password' component={renderField} label = 'Password'/>\n             \n                <button className=\"btn btn-outline-primary signinbut\" type = 'submit' onClick={this.Clear} disabled={submitting}>Sign In</button>\n                <button className=\"btn btn-outline-primary clear signinbut\" type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n\n          </form>)}\n}}\n\n\nexport default reduxForm ({\n    form: 'SignInForm'\n})(SignInForm)","import SignInForm from \"./SignInForm\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = function(state) {\n    return {\n        in: state.in.in\n    }\n}\n\nconst SignIn= connect(mapStateToProps)(SignInForm)\nexport default SignIn\n","const CHANGE_STAT='CHANGE_STAT';\nexport default function changeStatAction (usernm, usercountry, countries){\n    return {\n        type: CHANGE_STAT, \n        username: usernm,\n        usercountry: usercountry,\n        viscountries: countries\n        }\n}","import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport store from '../store';\nimport changeStatAction from '../actions/changeStatAction';\nimport '../css/Button.css';\nimport axios from 'axios';\n\n\nconst SendingStatistics = (countries) => {\n    const usercountry=store.getState().in.country\n    const username=store.getState().in.username\n    const viscountries=Object.keys(countries)\n    axios.post ('/catalog/users/' + username, {'trav': viscountries})\n        .then (res => store.dispatch (changeStatAction(username, usercountry, res.data)))\n}\n\n\nclass MyTravelsForm extends React.Component{\n        constructor (props) {\n        super (props) \n        this.state = {countries: [], \n        finished: null}\n        this.Clear=this.Clear.bind(this);\n    }\n\n    Clear () {\n      this.setState ({finished: true})\n    }\n\n        componentDidMount() {\n            fetch ('catalog/countries')\n            .then (res => res.json())\n            .then((count) =>this.setState({countries: count}))}\n\n\n        render () {\n        const { handleSubmit, submitting } = this.props\n        if (this.props.in) {\n        return (\n           <form onSubmit={handleSubmit(SendingStatistics)} className='col-9'>\n                <div>\n                        <h2>Choose the countries where you`ve been</h2 >\n                        <div>\n                        {this.state.countries.map((country, ind) =>\n                        <div>\n                        <label>{country} </label>\n                        <Field name={country} id={ind} component=\"input\" type=\"checkbox\" />\n                        </div>)}\n                        </div>\n                </div>\n                {this.state.finished && <p>Travels added</p>}\n                <button onClick={this.Clear} type = 'submit' disabled={submitting}>Submit</button>\n               \n                </form>\n        )}\n        else {\n            return <h3>Firstly, you need to sign in</h3>\n        }\n\n}}\n\nexport default reduxForm ({\n    form: 'MyTravelsForm'\n})(MyTravelsForm)","import MyTravelsForm from './MyTravelsForm';\nimport {connect} from 'react-redux'\n\nconst mapStateToProps = function(state) {\n    return {\n        in: state.in.in\n    }\n  }\n\n\nconst MyTravels= connect(mapStateToProps)(MyTravelsForm)\nexport default MyTravels\n\n","const SIGN_OUT='SIGN_OUT';\nexport default function SignOutAction (){\n    return {\n        type: SIGN_OUT, \n        result: 0}\n}","import React from 'react'\nimport {NavLink } from 'react-router-dom'\nimport '../css/Button.css';\n\nconst NavBar = (props) => {\n    return (\n        props.in\n          ? <div>\n             <nav> \n            <div>\n                <NavLink to='/'>Home</NavLink>\n            </div>\n            <div>\n                <NavLink to='/countries'>Countries</NavLink>\n            </div>\n            <div>\n                <NavLink to='/languagies'>Languagies</NavLink>\n            </div>\n            <div>\n                <NavLink to='/regions'>Regions</NavLink>\n            </div>\n            <div>\n                <NavLink to='/populationrank'>Rank of countries in descending order of population</NavLink>\n            </div>\n\n            <div>\n                <NavLink to='/signup'>Sign Up</NavLink>\n            </div>\n            \n           \n            <button type = 'button' onClick={props.SignOut} className = 'nav-button'>Sign Out</button>\n        \n            <hr />\n                <div>\n                    <NavLink to='/addtravels'>Add new travels</NavLink>\n                </div>\n                <div>\n                    <NavLink to='/mytravels'>My profile</NavLink>\n                </div>\n                <div>\n                    <NavLink to='/statistics'>Statistics of travels</NavLink>\n                </div>\n                </nav>\n              </div>\n          :  <nav> \n          <div>\n              <NavLink to='/'>Home</NavLink>\n          </div>\n          <div>\n              <NavLink to='/countries'>Countries</NavLink>\n          </div>\n          <div>\n              <NavLink to='/languagies'>Languagies</NavLink>\n          </div>\n          <div>\n              <NavLink to='/regions'>Regions</NavLink>\n          </div>\n          <div>\n              <NavLink to='/populationrank'>Rank of countries in descending order of population</NavLink>\n          </div>\n          <div>\n              <NavLink to='/signup'>Sign Up</NavLink>\n          </div>\n       \n          <div>\n              <NavLink to='/signin'>Sign In</NavLink>\n          </div>\n\n          \n      </nav>\n      )\n}\nexport default NavBar;","import  SignOutAction from '../actions/signOutAction';\nimport {connect} from 'react-redux'\nimport NavBar from './NavBar'\n\n\nconst mapStateToProps = function(state) {\n    return {\n        in: state.in.in\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n         SignOut: () => {\n          dispatch(SignOutAction())\n        }\n\n  }\n}\n\nconst NavBarContainer= connect(mapStateToProps, mapDispatchToProps)(NavBar)\nexport default NavBarContainer\n","import React from 'react';\nimport '../css/App.css';\nimport {NavLink } from 'react-router-dom'\n\nfunction comparePop(a, b) {\n  return  b.visits - a.visits;\n}\n\nclass Statistics extends React.Component {\n  \n  constructor () {\n    super ()\n    this.state = {\n      countries: []\n    }\n  }\n\n  componentDidMount() {\n      let list=[]\n      fetch ('catalog/countries')\n      .then (res => res.json())\n      .then((count) => {count.forEach ((one) => list.push ({'name': one, 'visits': 0, 'fromwhere': null}));this.setState({countries: list})})\n    }\n    \n\n      \n        render () {\n        let topcountries=this.state.countries\n        this.props.stat.forEach(data=> {data.viscountries.forEach(country => {\n          if (topcountries.find (item => item.name===country)){\n          topcountries.find (item => item.name===country).visits+=1\n          topcountries.find (item => item.name===country).fromwhere = data.usercountry}\n        })})\n        topcountries.sort(comparePop);\n        let yourtopcountries=[]\n        topcountries.forEach (one => {if (one.fromwhere===this.props.usercountry) {\n              yourtopcountries.push({'name' : one.name, 'visits': one.visits})\n        }})\n        const toplist=[]\n        topcountries=topcountries.slice(0, 10)\n        topcountries.forEach (one => {if (one.visits !==0) {\n            toplist.push(one)\n        }})\n        yourtopcountries=yourtopcountries.slice(0,5)\n\n            return (\n              this.props.in ?\n                <div>\n                  <div>\n                    <h3>Top of the most popular countries <br/> for travel:</h3>\n                    {toplist.map((country, ind) => \n                    <p key={ind}>{ind+1} \n                    <NavLink to={String('/countries/'+ country.name)}> {country.name} </NavLink> (Visits:{country.visits})\n                    </p>)}</div>\n                    <div>\n                    <h3>The most popular countries for travel  <br/> among poplutaion of your country:</h3>\n                    {yourtopcountries.map((country, ind) => \n                    <p key={ind}>{ind+1} \n                    <NavLink to={String('/countries/'+ country.name)}> {country.name} </NavLink> (Visits:{country.visits})\n                    </p>)}</div>\n                </div>\n                : <h3>Firstly, you need to sign in</h3>\n\n            )\n        }\n}\n\n\nexport default Statistics","import {connect} from 'react-redux'\nimport Statistics from './Statistics';\n\nconst mapStateToProps = function(state) {\n    return {\n        stat: state.statistics,\n        in: state.in.in,\n        usercountry: state.in.country\n    }\n}\n\n\nconst StatisticsContainer= connect(mapStateToProps)(Statistics)\nexport default StatisticsContainer","import React from 'react';\nimport store from '../store'\nimport {NavLink} from 'react-router-dom'\nimport axios from 'axios';\nimport SignOutAction from '../actions/signOutAction';\nimport DeleteAction from '../actions/deleteAction';\nimport '../css/Button.css';\n\nconst Deletting = () => {\n    const username = store.getState().in.username\n    axios.delete ('/catalog/signup', {params: {'username': username}})\n        .then (store.dispatch (SignOutAction()))\n        .then (store.dispatch(DeleteAction(username)))\n}\n\nclass Profile extends React.Component {\n    constructor (props) {\n    super (props)\n    this.state = { countries: []}\n   };\n  \n    componentDidMount() {\n        const allstat=this.props.stat\n        const name= this.props.username\n        let viscountr=[]\n        if (this.props.stat !== []) {\n        allstat.forEach ((info) => {if (info.username === name){\n            info.viscountries.map(country =>  viscountr.push(country))}})}\n        this.setState ({countries: viscountr})}\n    \n\n    render () {\n        if (this.props.in) {\n            return (\n                <div className = 'col-9'>\n                    <h3>My profile</h3>\n                    <div className='profile-button'>\n                    <button className=\"btn btn-outline-primary signinbut\" onClick={Deletting}>Delete profile </button>\n                    </div>\n                    <p>Name: <NavLink to='/changename'> {this.props.username}</NavLink> </p>\n                    {this.state.countries && <p>My travels: </p>}\n                    {this.state.countries && this.state.countries.map((country, ind) =>\n                    <p key={ind}>{ind+1} \n                    <NavLink to={String('/countries/'+ country)}> {country}</NavLink>\n                    </p>\n                    )}\n                </div>\n            )}\n        else {\n            return (<h3>Firstly, you need to sign in</h3>)\n        }\n        }\n}\n\nexport default Profile","export default function DeleteAction (usernm){\n    return {\n        type: 'DELETE', \n        username: usernm\n        }\n}","import {connect} from 'react-redux'\nimport Profile from './MyProfile'\n\nconst mapStateToProps = function(state) {\n    return {\n        in: state.in.in,\n        stat: state.statistics,\n        username: state.in.username\n    }\n  }\n\nconst ProfileContainer= connect(mapStateToProps)(Profile)\nexport default ProfileContainer\n\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form'\nimport store from '../store';\nimport axios from 'axios';\nimport changeNameAction from '../actions/changeNameAction';\n\nconst Changing = (values) => {\n    const username = store.getState().in.username\n    console.log(values.newname, username)\n    axios.put ('/catalog/signup', {'newname': values.newname, 'oldname': username})\n        .then (store.dispatch (changeNameAction(username, values.newname, store.getState().in.country)))\n}\n\nclass ChangeName extends React.Component{\n        constructor (props) {\n        super (props) \n        this.state = {countries: []}\n    } \n        render () {\n        const { handleSubmit, submitting } = this.props\n        if (this.props.in) {\n        return (\n           <form onSubmit={handleSubmit(Changing)}>\n                <div>\n                       \n                        <label> Enter new name </label>\n                        <Field name='newname' component=\"input\" type=\"texy\" />\n                    \n                </div>\n                <button type = 'submit' disabled={submitting}>Change name</button>\n                </form>\n        )}\n        else {\n            return <h3>Firstly, you need to sign in</h3>\n        }\n\n}}\n\nexport default reduxForm ({\n    form: 'ChangeNameForm'\n})(ChangeName)","export default function changeNameAction (oldnm, newnm, country){\n    console.log('action:', oldnm, newnm, country)\n    return {\n        type: 'CHANGE_NAME', \n        oldname: oldnm,\n        newname: newnm,\n        usercountry: country\n        }\n}","import {connect} from 'react-redux'\nimport ChangeName from './ChangeName'\n\nconst mapStateToProps = function(state) {\n    return {\n        in: state.in.in\n    }\n  }\n\nconst ChangeNameContainer= connect(mapStateToProps)(ChangeName)\nexport default ChangeNameContainer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Home from './components/Home';\nimport Countries from './components/Countries';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport Country from './components/CountryDetails'\nimport Languagies from './components/Languagies'\nimport Language from './components/Language'\nimport Regions from './components/Regions'\nimport Region from './components/Region'\nimport Population from './components/Population'\nimport { Provider } from 'react-redux'\nimport  store from './store'\nimport SignUp from './components/SignUp'\nimport SignIn from './components/SignIn'\n\nimport MyTravels from './components/AddNewTravels'\nimport NavBarContainer from './components/NavBarContainer';\nimport StatisticsContainer from './components/StatisticsContainer';\nimport ProfileContainer from './components/ProfileContainer';\nimport ChangeNameContainer from './components/ChangeNameContainer';\n\n\nReactDOM.render((\n    <Provider store = {store}>\n    <BrowserRouter>\n        <div className='container-fluid full-height'>\n        <header> <h1 style={{margin:0}}>T r a v e l l e r s</h1><div className='globus' style={{backgroundImage: 'url(http://pngimg.com/uploads/globe/globe_PNG59.png)'}}></div></header>\n        <div className='row'>\n        <div className= 'col-3'>\n        <NavBarContainer />\n        </div>\n        <Route exact path='/' component= {Home} />\n\n        <Route exact path='/countries' component = {Countries} /> \n        <Route path='/countries/:name' component={Country}/>\n\n        <Route exact path='/languagies' component={Languagies} />\n        <Route path='/languagies/:name' component={Language} />\n\n        <Route exact path='/regions' component={Regions} />\n        <Route path='/regions/:name' component={Region} />\n\n        <Route path='/populationrank' component={Population}/>\n\n        <Route path = '/signup' component = {SignUp} />\n        <Route path = '/signin' component = {SignIn} />\n\n        <Route path = '/addtravels' component = {MyTravels} />\n        <Route path = '/mytravels' component = {ProfileContainer} />\n        <Route path = '/statistics' component = {StatisticsContainer} />\n\n        <Route path='/changename' component = {ChangeNameContainer}/>\n        </div>\n        </div>\n    </BrowserRouter>\n    </Provider>\n    \n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}